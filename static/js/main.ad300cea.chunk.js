(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{290:function(e,t,r){e.exports=r(778)},295:function(e,t,r){},296:function(e,t,r){},764:function(e,t){},766:function(e,t){},776:function(e){e.exports={openapi:"3.0.0",servers:[{description:"SwaggerHub API Auto Mocking",url:"https://virtserver.swaggerhub.com/xfers/API2/1.0.0"},{description:"SwaggerHub API Auto Mocking",url:"https://virtserver.swaggerhub.com/xfers/API3/1.0.0"}],info:{description:"This is a sample Petstore server.  You can find\nout more about Swagger at\n[http://swagger.io](http://swagger.io) or on\n[irc.freenode.net, #swagger](http://swagger.io/irc/).\n",version:"1.0.0",title:"Swagger Petstore",termsOfService:"http://swagger.io/terms/",contact:{email:"apiteam@swagger.io"},license:{name:"Apache 2.0",url:"http://www.apache.org/licenses/LICENSE-2.0.html"}},tags:[{name:"pet",description:"Everything about your Pets",externalDocs:{description:"Find out more",url:"http://swagger.io"}},{name:"store",description:"Access to Petstore orders"}],paths:{"/pet":{post:{tags:["pet"],summary:"Add a new pet to the store",operationId:"addPet",responses:{405:{description:"Invalid input"}},security:[{petstore_auth:["write:pets","read:pets"]}],requestBody:{$ref:"#/components/requestBodies/Pet"}},put:{tags:["pet"],summary:"Update an existing pet",operationId:"updatePet",responses:{400:{description:"Invalid ID supplied"},404:{description:"Pet not found"},405:{description:"Validation exception"}},security:[{petstore_auth:["write:pets","read:pets"]}],requestBody:{$ref:"#/components/requestBodies/Pet"}}},"/pet/findByStatus":{get:{tags:["pet"],summary:"Finds Pets by status",description:"Multiple status values can be provided with comma separated strings",operationId:"findPetsByStatus",responses:{200:{description:"successful operation",content:{"application/json":{schema:{type:"array",items:{$ref:"#/components/schemas/Pet"}}},"application/xml":{schema:{type:"array",items:{$ref:"#/components/schemas/Pet"}}}}},400:{description:"Invalid status value"}},security:[{petstore_auth:["write:pets","read:pets"]}]}},"/pet/findByTags":{get:{tags:["pet"],summary:"Finds Pets by tags",description:"Muliple tags can be provided with comma separated strings. Use\\ \\ tag1, tag2, tag3 for testing.",operationId:"findPetsByTags",parameters:[{name:"tags",in:"query",description:"Tags to filter by",required:!0,explode:!0,schema:{type:"array",items:{type:"string"}}}],responses:{200:{description:"successful operation",content:{"application/json":{schema:{type:"array",items:{$ref:"#/components/schemas/Pet"}}},"application/xml":{schema:{type:"array",items:{$ref:"#/components/schemas/Pet"}}}}},400:{description:"Invalid tag value"}},security:[{petstore_auth:["write:pets","read:pets"]}],deprecated:!0}},"/pet/{petId}":{get:{tags:["pet"],summary:"Find pet by ID",description:"Returns a single pet",operationId:"getPetById",parameters:[{name:"petId",in:"path",description:"ID of pet to return",required:!0,schema:{type:"integer",format:"int64"}}],responses:{200:{description:"successful operation",content:{"application/json":{schema:{$ref:"#/components/schemas/Pet"}},"application/xml":{schema:{$ref:"#/components/schemas/Pet"}}}},400:{description:"Invalid ID supplied"},404:{description:"Pet not found"}},security:[{api_key:[]}]},post:{tags:["pet"],summary:"Updates a pet in the store with form data",operationId:"updatePetWithForm",parameters:[{name:"petId",in:"path",description:"ID of pet that needs to be updated",required:!0,schema:{type:"integer",format:"int64"}}],responses:{405:{description:"Invalid input"}},security:[{petstore_auth:["write:pets","read:pets"]}],requestBody:{content:{"application/x-www-form-urlencoded":{schema:{type:"object",properties:{name:{description:"Updated name of the pet",type:"string"},status:{description:"Updated status of the pet",type:"string"}}}}}}},delete:{tags:["pet"],summary:"Deletes a pet",operationId:"deletePet",parameters:[{name:"api_key",in:"header",required:!1,schema:{type:"string"}},{name:"petId",in:"path",description:"Pet id to delete",required:!0,schema:{type:"integer",format:"int64"}}],responses:{400:{description:"Invalid ID supplied"},404:{description:"Pet not found"}},security:[{petstore_auth:["write:pets","read:pets"]}]}},"/pet/{petId}/uploadImage":{post:{tags:["pet"],summary:"uploads an image",operationId:"uploadFile",parameters:[{name:"petId",in:"path",description:"ID of pet to update",required:!0,schema:{type:"integer",format:"int64"}}],responses:{200:{description:"successful operation",content:{"application/json":{schema:{$ref:"#/components/schemas/ApiResponse"}}}}},security:[{petstore_auth:["write:pets","read:pets"]}],requestBody:{content:{"application/octet-stream":{schema:{type:"string",format:"binary"}}}}}},"/store/inventory":{get:{tags:["store"],summary:"Returns pet inventories by status",description:"Returns a map of status codes to quantities",operationId:"getInventory",responses:{200:{description:"successful operation",content:{"application/json":{schema:{type:"object",additionalProperties:{type:"integer",format:"int32"}}}}}},security:[{api_key:[]}]}},"/store/order":{post:{tags:["store"],summary:"Place an order for a pet",operationId:"placeOrder",responses:{200:{description:"successful operation",content:{"application/json":{schema:{$ref:"#/components/schemas/Order"}},"application/xml":{schema:{$ref:"#/components/schemas/Order"}}}},400:{description:"Invalid Order"}},requestBody:{content:{"application/json":{schema:{$ref:"#/components/schemas/Order"}}},description:"order placed for purchasing the pet",required:!0}}},"/store/order/{orderId}":{get:{tags:["store"],summary:"Find purchase order by ID",description:"For valid response try integer IDs with value >= 1 and <= 10.\\ \\ Other values will generated exceptions",operationId:"getOrderById",parameters:[{name:"orderId",in:"path",description:"ID of pet that needs to be fetched",required:!0,schema:{type:"integer",format:"int64",minimum:1,maximum:10}}],responses:{200:{description:"successful operation",content:{"application/json":{schema:{$ref:"#/components/schemas/Order"}},"application/xml":{schema:{$ref:"#/components/schemas/Order"}}}},400:{description:"Invalid ID supplied"},404:{description:"Order not found"}}},delete:{tags:["store"],summary:"Delete purchase order by ID",description:"For valid response try integer IDs with positive integer value.\\ \\ Negative or non-integer values will generate API errors",operationId:"deleteOrder",parameters:[{name:"orderId",in:"path",description:"ID of the order that needs to be deleted",required:!0,schema:{type:"integer",format:"int64",minimum:1}}],responses:{400:{description:"Invalid ID supplied"},404:{description:"Order not found"}}}}},externalDocs:{description:"Find out more about Swagger",url:"http://swagger.io"},components:{schemas:{Order:{type:"object",properties:{id:{type:"integer",format:"int64"},petId:{type:"integer",format:"int64"},quantity:{type:"integer",format:"int32"},shipDate:{type:"string",format:"date-time"},status:{type:"string",description:"Order Status",enum:["placed","approved","delivered"]},complete:{type:"boolean",default:!1}},xml:{name:"Order"}},Category:{type:"object",properties:{id:{type:"integer",format:"int64"},name:{type:"string"}},xml:{name:"Category"}},User:{type:"object",properties:{id:{type:"integer",format:"int64"},username:{type:"string"},firstName:{type:"string"},lastName:{type:"string"},email:{type:"string"},password:{type:"string"},phone:{type:"string"},userStatus:{type:"integer",format:"int32",description:"User Status"}},xml:{name:"User"}},Tag:{type:"object",properties:{id:{type:"integer",format:"int64"},name:{type:"string"}},xml:{name:"Tag"}},Pet:{type:"object",required:["name","photoUrls"],properties:{id:{type:"integer",format:"int64"},category:{$ref:"#/components/schemas/Category"},name:{type:"string",example:"doggie"},photoUrls:{type:"array",xml:{name:"photoUrl",wrapped:!0},items:{type:"string"}},tags:{type:"array",xml:{name:"tag",wrapped:!0},items:{$ref:"#/components/schemas/Tag"}},status:{type:"string",description:"pet status in the store",enum:["available","pending","sold"]}},xml:{name:"Pet"}},ApiResponse:{type:"object",properties:{code:{type:"integer",format:"int32"},type:{type:"string"},message:{type:"string"}}}},requestBodies:{Pet:{content:{"application/json":{schema:{$ref:"#/components/schemas/Pet"}},"application/xml":{schema:{$ref:"#/components/schemas/Pet"}}},description:"Pet object that needs to be added to the store",required:!0},UserArray:{content:{"application/json":{schema:{type:"array",items:{$ref:"#/components/schemas/User"}}}},description:"List of user object",required:!0}},securitySchemes:{petstore_auth:{type:"oauth2",flows:{implicit:{authorizationUrl:"http://petstore.swagger.io/oauth/dialog",scopes:{"write:pets":"modify pets in your account","read:pets":"read your pets"}}}},api_key:{type:"apiKey",name:"api_key",in:"header"}}}}},777:function(e){e.exports={openapi:"3.0.0",servers:[{description:"SwaggerHub API Auto Mocking",url:"https://virtserver.swaggerhub.com/xfers/API2/1.0.0"},{description:"SwaggerHub API Auto Mocking",url:"https://virtserver.swaggerhub.com/xfers/API3/1.0.0"}],info:{description:"This is a sample Petstore server.  You can find\nout more about Swagger at\n[http://swagger.io](http://swagger.io) or on\n[irc.freenode.net, #swagger](http://swagger.io/irc/).\n",version:"1.0.0",title:"Swagger Petstore",termsOfService:"http://swagger.io/terms/",contact:{email:"apiteam@swagger.io"},license:{name:"Apache 2.0",url:"http://www.apache.org/licenses/LICENSE-2.0.html"}},tags:[{name:"pet",description:"Everything about your Pets",externalDocs:{description:"Find out more",url:"http://swagger.io"}}],paths:{"/pet":{post:{tags:["pet"],summary:"Add a new pet to the store",operationId:"addPet",responses:{405:{description:"Invalid input"}},security:[{petstore_auth:["write:pets","read:pets"]}],requestBody:{$ref:"#/components/requestBodies/Pet"}},put:{tags:["pet"],summary:"Update an existing pet",operationId:"updatePet",responses:{400:{description:"Invalid ID supplied"},404:{description:"Pet not found"},405:{description:"Validation exception"}},security:[{petstore_auth:["write:pets","read:pets"]}],requestBody:{$ref:"#/components/requestBodies/Pet"}}}},externalDocs:{description:"Find out more about Swagger",url:"http://swagger.io"},components:{schemas:{Order:{type:"object",properties:{id:{type:"integer",format:"int64"},petId:{type:"integer",format:"int64"},quantity:{type:"integer",format:"int32"},shipDate:{type:"string",format:"date-time"},status:{type:"string",description:"Order Status",enum:["placed","approved","delivered"]},complete:{type:"boolean",default:!1}},xml:{name:"Order"}},Category:{type:"object",properties:{id:{type:"integer",format:"int64"},name:{type:"string"}},xml:{name:"Category"}},User:{type:"object",properties:{id:{type:"integer",format:"int64"},username:{type:"string"},firstName:{type:"string"},lastName:{type:"string"},email:{type:"string"},password:{type:"string"},phone:{type:"string"},userStatus:{type:"integer",format:"int32",description:"User Status"}},xml:{name:"User"}},Tag:{type:"object",properties:{id:{type:"integer",format:"int64"},name:{type:"string"}},xml:{name:"Tag"}},Pet:{type:"object",required:["name","photoUrls"],properties:{id:{type:"integer",format:"int64"},category:{$ref:"#/components/schemas/Category"},name:{type:"string",example:"doggie"},photoUrls:{type:"array",xml:{name:"photoUrl",wrapped:!0},items:{type:"string"}},tags:{type:"array",xml:{name:"tag",wrapped:!0},items:{$ref:"#/components/schemas/Tag"}},status:{type:"string",description:"pet status in the store",enum:["available","pending","sold"]}},xml:{name:"Pet"}},ApiResponse:{type:"object",properties:{code:{type:"integer",format:"int32"},type:{type:"string"},message:{type:"string"}}}},requestBodies:{Pet:{content:{"application/json":{schema:{$ref:"#/components/schemas/Pet"}},"application/xml":{schema:{$ref:"#/components/schemas/Pet"}}},description:"Pet object that needs to be added to the store",required:!0},UserArray:{content:{"application/json":{schema:{type:"array",items:{$ref:"#/components/schemas/User"}}}},description:"List of user object",required:!0}},securitySchemes:{petstore_auth:{type:"oauth2",flows:{implicit:{authorizationUrl:"http://petstore.swagger.io/oauth/dialog",scopes:{"write:pets":"modify pets in your account","read:pets":"read your pets"}}}},api_key:{type:"apiKey",name:"api_key",in:"header"}}}}},778:function(e,t,r){"use strict";r.r(t);var s=r(4),i=r.n(s),n=r(282),o=r.n(n),a=(r(295),r(283)),p=r(284),c=r(288),d=r(285),m=r(105),u=r(289),g=(r(296),r(171)),l=r.n(g),y=r(170),h=r.n(y),f=function(e){var t="Singapore"===e.country;return i.a.createElement("div",{className:"country-switch"},i.a.createElement("label",{htmlFor:"icon-switch"},i.a.createElement("span",null," Switch for country "),i.a.createElement(h.a,{checked:t,onChange:function(){return t=!t,console.log(t),void(t?e.updateDefinitionJSON("Singapore"):e.updateDefinitionJSON("Indonesia"))},width:70,uncheckedIcon:i.a.createElement("div",{style:{display:"flex",justifyContent:"center",alignItems:"center",height:"100%",fontSize:15,color:"orange",paddingRight:2}},i.a.createElement("h1",null," Indo ")),checkedIcon:i.a.createElement("div",{style:{display:"flex",justifyContent:"center",alignItems:"center",height:"100%",fontSize:15,color:"orange",paddingRight:2}},i.a.createElement("h1",null," SG "))})))},w=(r(775),function(e){function t(e){var s;return Object(a.a)(this,t),(s=Object(c.a)(this,Object(d.a)(t).call(this,e))).state={sgOasDoc:r(776),idOasDoc:r(777),country:"Indonesia",definitionJSON:null},s.updateDefinitionJSON=s.updateDefinitionJSON.bind(Object(m.a)(s)),s}return Object(u.a)(t,e),Object(p.a)(t,[{key:"updateDefinitionJSON",value:function(e){if(console.log(e),"Singapore"===e)this.setState({definitionJSON:this.state.sgOasDoc,country:e});else{if("Indonesia"!==e)throw new Error("Invalid country name check string");this.setState({definitionJSON:this.state.idOasDoc,country:e})}}},{key:"componentDidUpdate",value:function(){l()({domNode:document.getElementById("api-data"),spec:this.state.definitionJSON})}},{key:"componentWillMount",value:function(){this.updateDefinitionJSON(this.state.country)}},{key:"componentDidMount",value:function(){if(null===this.state.definitionJSON)throw new Error(this.state.definitionJSON);l()({domNode:document.getElementById("api-data"),spec:this.state.definitionJSON})}},{key:"render",value:function(){return i.a.createElement("div",{className:"App"},i.a.createElement(f,{updateDefinitionJSON:this.updateDefinitionJSON,country:this.state.country}),i.a.createElement("div",{id:"country-header"},this.state.country),i.a.createElement("div",{id:"api-data"}))}}]),t}(s.Component));Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));o.a.render(i.a.createElement(w,null),document.getElementById("root")),"serviceWorker"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}},[[290,1,2]]]);
//# sourceMappingURL=main.ad300cea.chunk.js.map